name: Docker Tests
on:
  push:
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [labeled]
# Ensures that only the latest commit is running for each PR at a time.
# Ignores this rule for push events.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  Artifactory-Jenkins-Plugin-Tests:
    if: (contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'push') && github.repository_owner != 'jenkinsci'
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    environment: jenkins
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "temurin"

      - name: Run Docker tests
        env:
          JENKINS_PLATFORM_URL: ${{ secrets.PLATFORM_URL }}
          JENKINS_PLATFORM_USERNAME: ${{ secrets.PLATFORM_USER }}
          JENKINS_PLATFORM_ADMIN_TOKEN: ${{ secrets.PLATFORM_ADMIN_TOKEN }}
          JENKINS_ARTIFACTORY_DOCKER_PULL_DOMAIN: ${{ secrets.CONTAINER_REGISTRY }}/docker-remote
          JENKINS_ARTIFACTORY_DOCKER_PUSH_DOMAIN: ${{ secrets.CONTAINER_REGISTRY }}/docker-local
          JENKINS_ARTIFACTORY_DOCKER_PULL_REPO: docker-remote
          JENKINS_ARTIFACTORY_DOCKER_PUSH_REPO: docker-local
        run: mvn -V -B -U --no-transfer-progress clean verify -DskipITs=false -Dtest=**/*DockerITest.java "-Dfindbugs.failOnError=false"
