updateCommitStatus: &UPDATE_COMMIT_STATUS update_commit_status jenkinsReleaseGit --context "$step_name"

resources:
  - name: jenkinsReleaseGit
    type: GitRepo
    configuration:
      path: yahavi/jenkins-artifactory-plugin
      gitProvider: yahav_github
      buildOn:
        commit: false

pipelines:
  - name: build_jenkins
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: maven
            tag: 3.6.3-adoptopenjdk-8
      environmentVariables:
        readOnly:
          NEXT_VERSION: 0.0.0
          NEXT_DEVELOPMENT_VERSION: 0.0.x-SNAPSHOT
          CI: "true"
          M2_HOME: $MAVEN_HOME
          JFROG_CLI_BUILD_NAME: "artifactory-jenkins-plugin"
          JFROG_CLI_BUILD_NUMBER: $run_number

    steps:
      - name: Release
        type: Bash
        configuration:
          inputResources:
            - name: jenkinsReleaseGit
          integrations:
            - name: jfrog
            - name: ojo
            - name: yahav_github_generic
        execution:
          onStart:
            - apt update && apt install -y gettext-base jq
            - *UPDATE_COMMIT_STATUS
            - restore_cache_files m2_home ${HOME}/.m2
          onExecute:
            - cd $res_jenkinsReleaseGit_resourcePath
            - git checkout master

            # Make sure versions provided
            - echo "Checking variables"
            - test -n "$NEXT_VERSION" -a "$NEXT_VERSION" != "0.0.0"
            - test -n "$NEXT_DEVELOPMENT_VERSION" -a "$NEXT_DEVELOPMENT_VERSION" != "0.0.0"

            # Download JFrog CLI
            - curl -fL https://getcli.jfrog.io | sh && chmod +x jfrog

            # Configure JFrog CLI
            - ./jfrog rt c jfrog --url $int_jfrog_rt_url --user $int_jfrog_rt_user --password $int_jfrog_rt_password
            - ./jfrog rt c ojo --url $int_ojo_rt_url --access-token=$int_ojo_rt_token
            - ./jfrog rt mvnc
              --server-id-resolve ojo --repo-resolve-releases jfrog-dependencies --repo-resolve-snapshots jfrog-dependencies
              --server-id-deploy jfrog --repo-deploy-releases releases --repo-deploy-snapshots snapshots

            # Update version
            - ./jfrog rt mvn versions:set -DnewVersion="${NEXT_VERSION}" -B
            - git commit -am "[skipRun][artifactory-release] Release version ${NEXT_VERSION}" --allow-empty
            - git tag artifactory-${NEXT_VERSION}
            - git push https://$int_yahav_github_generic_token@github.com/yahavi/jenkins-artifactory-plugin.git
            - git push --tags https://$int_yahav_github_generic_token@github.com/yahavi/jenkins-artifactory-plugin.git

            # Run install and publish
            - ./jfrog rt bc
            - ./jfrog rt mvn clean install -U -B
            - ./jfrog rt bp

            # Update next development version
            - ./jfrog rt mvn versions:set -DnewVersion=$NEXT_DEVELOPMENT_VERSION -B
            - git commit -am "[skipRun][artifactory-release] Next development version"
            - git push https://$int_yahav_github_generic_token@github.com/yahavi/jenkins-artifactory-plugin.git

          onComplete:
            # Show tests in the *Tests* tab
            - save_tests $res_jenkinsReleaseGit_resourcePath/target/surefire-reports/

            - *UPDATE_COMMIT_STATUS

            # Save .m2 cache
            - add_cache_files ${HOME}/.m2 m2_home